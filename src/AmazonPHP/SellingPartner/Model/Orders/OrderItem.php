<?php declare(strict_types=1);
/**
 * OrderItem.
 *
 * PHP version 7.4
 *
 * @category Class
 *
 * @author   OpenAPI Generator team
 *
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Orders.
 *
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
namespace AmazonPHP\SellingPartner\Model\Orders;

use AmazonPHP\SellingPartner\ModelInterface;
use AmazonPHP\SellingPartner\ObjectSerializer;

/**
 * This class was auto-generated by https://github.com/OpenAPITools/openapi-generator/.
 * Do not change it, it will be overwritten with next execution of /bin/generate.sh.
 *
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class OrderItem implements \ArrayAccess, \JsonSerializable, ModelInterface
{
    public const DISCRIMINATOR = null;

    public const DEEMED_RESELLER_CATEGORY_IOSS = 'IOSS';

    public const DEEMED_RESELLER_CATEGORY_UOSS = 'UOSS';

    /**
     * The original name of the model.
     *
     * @var string
     */
    protected static string $openAPIModelName = 'OrderItem';

    /**
     * Array of property to type mappings. Used for (de)serialization.
     *
     * @var string[]
     */
    protected static array $openAPITypes = [
        'aSIN' => 'string',
        'sellerSKU' => 'string',
        'orderItemId' => 'string',
        'title' => 'string',
        'quantityOrdered' => 'int',
        'quantityShipped' => 'int',
        'productInfo' => '\AmazonPHP\SellingPartner\Model\Orders\ProductInfoDetail',
        'pointsGranted' => '\AmazonPHP\SellingPartner\Model\Orders\PointsGrantedDetail',
        'itemPrice' => '\AmazonPHP\SellingPartner\Model\Orders\Money',
        'shippingPrice' => '\AmazonPHP\SellingPartner\Model\Orders\Money',
        'itemTax' => '\AmazonPHP\SellingPartner\Model\Orders\Money',
        'shippingTax' => '\AmazonPHP\SellingPartner\Model\Orders\Money',
        'shippingDiscount' => '\AmazonPHP\SellingPartner\Model\Orders\Money',
        'shippingDiscountTax' => '\AmazonPHP\SellingPartner\Model\Orders\Money',
        'promotionDiscount' => '\AmazonPHP\SellingPartner\Model\Orders\Money',
        'promotionDiscountTax' => '\AmazonPHP\SellingPartner\Model\Orders\Money',
        'promotionIds' => 'string[]',
        'cODFee' => '\AmazonPHP\SellingPartner\Model\Orders\Money',
        'cODFeeDiscount' => '\AmazonPHP\SellingPartner\Model\Orders\Money',
        'isGift' => 'bool',
        'conditionNote' => 'string',
        'conditionId' => 'string',
        'conditionSubtypeId' => 'string',
        'scheduledDeliveryStartDate' => 'string',
        'scheduledDeliveryEndDate' => 'string',
        'priceDesignation' => 'string',
        'taxCollection' => '\AmazonPHP\SellingPartner\Model\Orders\TaxCollection',
        'serialNumberRequired' => 'bool',
        'isTransparency' => 'bool',
        'iossNumber' => 'string',
        'storeChainStoreId' => 'string',
        'deemedResellerCategory' => 'string',
    ];

    /**
     * Array of property to format mappings. Used for (de)serialization.
     *
     * @var string[]
     * @phpstan-var array<string, string|null>
     * @psalm-var array<string, string|null>
     */
    protected static array $openAPIFormats = [
        'aSIN' => null,
        'sellerSKU' => null,
        'orderItemId' => null,
        'title' => null,
        'quantityOrdered' => null,
        'quantityShipped' => null,
        'productInfo' => null,
        'pointsGranted' => null,
        'itemPrice' => null,
        'shippingPrice' => null,
        'itemTax' => null,
        'shippingTax' => null,
        'shippingDiscount' => null,
        'shippingDiscountTax' => null,
        'promotionDiscount' => null,
        'promotionDiscountTax' => null,
        'promotionIds' => null,
        'cODFee' => null,
        'cODFeeDiscount' => null,
        'isGift' => null,
        'conditionNote' => null,
        'conditionId' => null,
        'conditionSubtypeId' => null,
        'scheduledDeliveryStartDate' => null,
        'scheduledDeliveryEndDate' => null,
        'priceDesignation' => null,
        'taxCollection' => null,
        'serialNumberRequired' => null,
        'isTransparency' => null,
        'iossNumber' => null,
        'storeChainStoreId' => null,
        'deemedResellerCategory' => null,
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name.
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'aSIN' => 'ASIN',
        'sellerSKU' => 'SellerSKU',
        'orderItemId' => 'OrderItemId',
        'title' => 'Title',
        'quantityOrdered' => 'QuantityOrdered',
        'quantityShipped' => 'QuantityShipped',
        'productInfo' => 'ProductInfo',
        'pointsGranted' => 'PointsGranted',
        'itemPrice' => 'ItemPrice',
        'shippingPrice' => 'ShippingPrice',
        'itemTax' => 'ItemTax',
        'shippingTax' => 'ShippingTax',
        'shippingDiscount' => 'ShippingDiscount',
        'shippingDiscountTax' => 'ShippingDiscountTax',
        'promotionDiscount' => 'PromotionDiscount',
        'promotionDiscountTax' => 'PromotionDiscountTax',
        'promotionIds' => 'PromotionIds',
        'cODFee' => 'CODFee',
        'cODFeeDiscount' => 'CODFeeDiscount',
        'isGift' => 'IsGift',
        'conditionNote' => 'ConditionNote',
        'conditionId' => 'ConditionId',
        'conditionSubtypeId' => 'ConditionSubtypeId',
        'scheduledDeliveryStartDate' => 'ScheduledDeliveryStartDate',
        'scheduledDeliveryEndDate' => 'ScheduledDeliveryEndDate',
        'priceDesignation' => 'PriceDesignation',
        'taxCollection' => 'TaxCollection',
        'serialNumberRequired' => 'SerialNumberRequired',
        'isTransparency' => 'IsTransparency',
        'iossNumber' => 'IossNumber',
        'storeChainStoreId' => 'StoreChainStoreId',
        'deemedResellerCategory' => 'DeemedResellerCategory',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses).
     *
     * @var string[]
     */
    protected static array $setters = [
        'aSIN' => 'setASIN',
        'sellerSKU' => 'setSellerSKU',
        'orderItemId' => 'setOrderItemId',
        'title' => 'setTitle',
        'quantityOrdered' => 'setQuantityOrdered',
        'quantityShipped' => 'setQuantityShipped',
        'productInfo' => 'setProductInfo',
        'pointsGranted' => 'setPointsGranted',
        'itemPrice' => 'setItemPrice',
        'shippingPrice' => 'setShippingPrice',
        'itemTax' => 'setItemTax',
        'shippingTax' => 'setShippingTax',
        'shippingDiscount' => 'setShippingDiscount',
        'shippingDiscountTax' => 'setShippingDiscountTax',
        'promotionDiscount' => 'setPromotionDiscount',
        'promotionDiscountTax' => 'setPromotionDiscountTax',
        'promotionIds' => 'setPromotionIds',
        'cODFee' => 'setCODFee',
        'cODFeeDiscount' => 'setCODFeeDiscount',
        'isGift' => 'setIsGift',
        'conditionNote' => 'setConditionNote',
        'conditionId' => 'setConditionId',
        'conditionSubtypeId' => 'setConditionSubtypeId',
        'scheduledDeliveryStartDate' => 'setScheduledDeliveryStartDate',
        'scheduledDeliveryEndDate' => 'setScheduledDeliveryEndDate',
        'priceDesignation' => 'setPriceDesignation',
        'taxCollection' => 'setTaxCollection',
        'serialNumberRequired' => 'setSerialNumberRequired',
        'isTransparency' => 'setIsTransparency',
        'iossNumber' => 'setIossNumber',
        'storeChainStoreId' => 'setStoreChainStoreId',
        'deemedResellerCategory' => 'setDeemedResellerCategory',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests).
     *
     * @var string[]
     */
    protected static array $getters = [
        'aSIN' => 'getASIN',
        'sellerSKU' => 'getSellerSKU',
        'orderItemId' => 'getOrderItemId',
        'title' => 'getTitle',
        'quantityOrdered' => 'getQuantityOrdered',
        'quantityShipped' => 'getQuantityShipped',
        'productInfo' => 'getProductInfo',
        'pointsGranted' => 'getPointsGranted',
        'itemPrice' => 'getItemPrice',
        'shippingPrice' => 'getShippingPrice',
        'itemTax' => 'getItemTax',
        'shippingTax' => 'getShippingTax',
        'shippingDiscount' => 'getShippingDiscount',
        'shippingDiscountTax' => 'getShippingDiscountTax',
        'promotionDiscount' => 'getPromotionDiscount',
        'promotionDiscountTax' => 'getPromotionDiscountTax',
        'promotionIds' => 'getPromotionIds',
        'cODFee' => 'getCODFee',
        'cODFeeDiscount' => 'getCODFeeDiscount',
        'isGift' => 'getIsGift',
        'conditionNote' => 'getConditionNote',
        'conditionId' => 'getConditionId',
        'conditionSubtypeId' => 'getConditionSubtypeId',
        'scheduledDeliveryStartDate' => 'getScheduledDeliveryStartDate',
        'scheduledDeliveryEndDate' => 'getScheduledDeliveryEndDate',
        'priceDesignation' => 'getPriceDesignation',
        'taxCollection' => 'getTaxCollection',
        'serialNumberRequired' => 'getSerialNumberRequired',
        'isTransparency' => 'getIsTransparency',
        'iossNumber' => 'getIossNumber',
        'storeChainStoreId' => 'getStoreChainStoreId',
        'deemedResellerCategory' => 'getDeemedResellerCategory',
    ];

    /**
     * Associative array for storing property values.
     *
     * @var mixed[]
     */
    protected array $container = [];

    /**
     * Constructor.
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['aSIN'] = $data['aSIN'] ?? null;
        $this->container['sellerSKU'] = $data['sellerSKU'] ?? null;
        $this->container['orderItemId'] = $data['orderItemId'] ?? null;
        $this->container['title'] = $data['title'] ?? null;
        $this->container['quantityOrdered'] = $data['quantityOrdered'] ?? null;
        $this->container['quantityShipped'] = $data['quantityShipped'] ?? null;
        $this->container['productInfo'] = $data['productInfo'] ?? null;
        $this->container['pointsGranted'] = $data['pointsGranted'] ?? null;
        $this->container['itemPrice'] = $data['itemPrice'] ?? null;
        $this->container['shippingPrice'] = $data['shippingPrice'] ?? null;
        $this->container['itemTax'] = $data['itemTax'] ?? null;
        $this->container['shippingTax'] = $data['shippingTax'] ?? null;
        $this->container['shippingDiscount'] = $data['shippingDiscount'] ?? null;
        $this->container['shippingDiscountTax'] = $data['shippingDiscountTax'] ?? null;
        $this->container['promotionDiscount'] = $data['promotionDiscount'] ?? null;
        $this->container['promotionDiscountTax'] = $data['promotionDiscountTax'] ?? null;
        $this->container['promotionIds'] = $data['promotionIds'] ?? null;
        $this->container['cODFee'] = $data['cODFee'] ?? null;
        $this->container['cODFeeDiscount'] = $data['cODFeeDiscount'] ?? null;
        $this->container['isGift'] = $data['isGift'] ?? null;
        $this->container['conditionNote'] = $data['conditionNote'] ?? null;
        $this->container['conditionId'] = $data['conditionId'] ?? null;
        $this->container['conditionSubtypeId'] = $data['conditionSubtypeId'] ?? null;
        $this->container['scheduledDeliveryStartDate'] = $data['scheduledDeliveryStartDate'] ?? null;
        $this->container['scheduledDeliveryEndDate'] = $data['scheduledDeliveryEndDate'] ?? null;
        $this->container['priceDesignation'] = $data['priceDesignation'] ?? null;
        $this->container['taxCollection'] = $data['taxCollection'] ?? null;
        $this->container['serialNumberRequired'] = $data['serialNumberRequired'] ?? null;
        $this->container['isTransparency'] = $data['isTransparency'] ?? null;
        $this->container['iossNumber'] = $data['iossNumber'] ?? null;
        $this->container['storeChainStoreId'] = $data['storeChainStoreId'] ?? null;
        $this->container['deemedResellerCategory'] = $data['deemedResellerCategory'] ?? null;
    }

    /**
     * Array of property to type mappings. Used for (de)serialization.
     *
     * @return string[]
     */
    public static function openAPITypes() : array
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization.
     *
     * @return null[]|string[]
     */
    public static function openAPIFormats() : array
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name.
     *
     * @return string[]
     */
    public static function attributeMap() : array
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses).
     *
     * @return string[]
     */
    public static function setters() : array
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests).
     *
     * @return string[]
     */
    public static function getters() : array
    {
        return self::$getters;
    }

    /**
     * Gets the string presentation of the object.
     */
    public function __toString() : string
    {
        return \json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * The original name of the model.
     */
    public function getModelName() : string
    {
        return self::$openAPIModelName;
    }

    /**
     * Gets allowable values of the enum.
     *
     * @return string[]
     */
    public function getDeemedResellerCategoryAllowableValues() : array
    {
        return [
            self::DEEMED_RESELLER_CATEGORY_IOSS,
            self::DEEMED_RESELLER_CATEGORY_UOSS,
        ];
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties() : array
    {
        $invalidProperties = [];

        if ($this->container['aSIN'] === null) {
            $invalidProperties[] = "'aSIN' can't be null";
        }

        if ($this->container['orderItemId'] === null) {
            $invalidProperties[] = "'orderItemId' can't be null";
        }

        if ($this->container['quantityOrdered'] === null) {
            $invalidProperties[] = "'quantityOrdered' can't be null";
        }
        $allowedValues = $this->getDeemedResellerCategoryAllowableValues();

        if (null !== $this->container['deemedResellerCategory'] && !\in_array($this->container['deemedResellerCategory'], $allowedValues, true)) {
            $invalidProperties[] = \sprintf(
                "invalid value '%s' for 'deemedResellerCategory', must be one of '%s'",
                $this->container['deemedResellerCategory'],
                \implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed.
     *
     * @return bool True if all properties are valid
     */
    public function valid() : bool
    {
        return \count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets aSIN.
     */
    public function getASIN() : string
    {
        return $this->container['aSIN'];
    }

    /**
     * Sets aSIN.
     *
     * @param string $aSIN the Amazon Standard Identification Number (ASIN) of the item
     */
    public function setASIN(string $aSIN) : self
    {
        $this->container['aSIN'] = $aSIN;

        return $this;
    }

    /**
     * Gets sellerSKU.
     */
    public function getSellerSKU() : ?string
    {
        return $this->container['sellerSKU'];
    }

    /**
     * Sets sellerSKU.
     *
     * @param null|string $sellerSKU the seller stock keeping unit (SKU) of the item
     */
    public function setSellerSKU(?string $sellerSKU) : self
    {
        $this->container['sellerSKU'] = $sellerSKU;

        return $this;
    }

    /**
     * Gets orderItemId.
     */
    public function getOrderItemId() : string
    {
        return $this->container['orderItemId'];
    }

    /**
     * Sets orderItemId.
     *
     * @param string $orderItemId an Amazon-defined order item identifier
     */
    public function setOrderItemId(string $orderItemId) : self
    {
        $this->container['orderItemId'] = $orderItemId;

        return $this;
    }

    /**
     * Gets title.
     */
    public function getTitle() : ?string
    {
        return $this->container['title'];
    }

    /**
     * Sets title.
     *
     * @param null|string $title the name of the item
     */
    public function setTitle(?string $title) : self
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets quantityOrdered.
     */
    public function getQuantityOrdered() : int
    {
        return $this->container['quantityOrdered'];
    }

    /**
     * Sets quantityOrdered.
     *
     * @param int $quantityOrdered the number of items in the order
     */
    public function setQuantityOrdered(int $quantityOrdered) : self
    {
        $this->container['quantityOrdered'] = $quantityOrdered;

        return $this;
    }

    /**
     * Gets quantityShipped.
     */
    public function getQuantityShipped() : ?int
    {
        return $this->container['quantityShipped'];
    }

    /**
     * Sets quantityShipped.
     *
     * @param null|int $quantityShipped the number of items shipped
     */
    public function setQuantityShipped(?int $quantityShipped) : self
    {
        $this->container['quantityShipped'] = $quantityShipped;

        return $this;
    }

    /**
     * Gets productInfo.
     */
    public function getProductInfo() : ?ProductInfoDetail
    {
        return $this->container['productInfo'];
    }

    /**
     * Sets productInfo.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\ProductInfoDetail $productInfo productInfo
     */
    public function setProductInfo(?ProductInfoDetail $productInfo) : self
    {
        $this->container['productInfo'] = $productInfo;

        return $this;
    }

    /**
     * Gets pointsGranted.
     */
    public function getPointsGranted() : ?PointsGrantedDetail
    {
        return $this->container['pointsGranted'];
    }

    /**
     * Sets pointsGranted.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\PointsGrantedDetail $pointsGranted pointsGranted
     */
    public function setPointsGranted(?PointsGrantedDetail $pointsGranted) : self
    {
        $this->container['pointsGranted'] = $pointsGranted;

        return $this;
    }

    /**
     * Gets itemPrice.
     */
    public function getItemPrice() : ?Money
    {
        return $this->container['itemPrice'];
    }

    /**
     * Sets itemPrice.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\Money $itemPrice itemPrice
     */
    public function setItemPrice(?Money $itemPrice) : self
    {
        $this->container['itemPrice'] = $itemPrice;

        return $this;
    }

    /**
     * Gets shippingPrice.
     */
    public function getShippingPrice() : ?Money
    {
        return $this->container['shippingPrice'];
    }

    /**
     * Sets shippingPrice.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\Money $shippingPrice shippingPrice
     */
    public function setShippingPrice(?Money $shippingPrice) : self
    {
        $this->container['shippingPrice'] = $shippingPrice;

        return $this;
    }

    /**
     * Gets itemTax.
     */
    public function getItemTax() : ?Money
    {
        return $this->container['itemTax'];
    }

    /**
     * Sets itemTax.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\Money $itemTax itemTax
     */
    public function setItemTax(?Money $itemTax) : self
    {
        $this->container['itemTax'] = $itemTax;

        return $this;
    }

    /**
     * Gets shippingTax.
     */
    public function getShippingTax() : ?Money
    {
        return $this->container['shippingTax'];
    }

    /**
     * Sets shippingTax.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\Money $shippingTax shippingTax
     */
    public function setShippingTax(?Money $shippingTax) : self
    {
        $this->container['shippingTax'] = $shippingTax;

        return $this;
    }

    /**
     * Gets shippingDiscount.
     */
    public function getShippingDiscount() : ?Money
    {
        return $this->container['shippingDiscount'];
    }

    /**
     * Sets shippingDiscount.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\Money $shippingDiscount shippingDiscount
     */
    public function setShippingDiscount(?Money $shippingDiscount) : self
    {
        $this->container['shippingDiscount'] = $shippingDiscount;

        return $this;
    }

    /**
     * Gets shippingDiscountTax.
     */
    public function getShippingDiscountTax() : ?Money
    {
        return $this->container['shippingDiscountTax'];
    }

    /**
     * Sets shippingDiscountTax.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\Money $shippingDiscountTax shippingDiscountTax
     */
    public function setShippingDiscountTax(?Money $shippingDiscountTax) : self
    {
        $this->container['shippingDiscountTax'] = $shippingDiscountTax;

        return $this;
    }

    /**
     * Gets promotionDiscount.
     */
    public function getPromotionDiscount() : ?Money
    {
        return $this->container['promotionDiscount'];
    }

    /**
     * Sets promotionDiscount.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\Money $promotionDiscount promotionDiscount
     */
    public function setPromotionDiscount(?Money $promotionDiscount) : self
    {
        $this->container['promotionDiscount'] = $promotionDiscount;

        return $this;
    }

    /**
     * Gets promotionDiscountTax.
     */
    public function getPromotionDiscountTax() : ?Money
    {
        return $this->container['promotionDiscountTax'];
    }

    /**
     * Sets promotionDiscountTax.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\Money $promotionDiscountTax promotionDiscountTax
     */
    public function setPromotionDiscountTax(?Money $promotionDiscountTax) : self
    {
        $this->container['promotionDiscountTax'] = $promotionDiscountTax;

        return $this;
    }

    /**
     * Gets promotionIds.
     *
     * @return null|string[]
     */
    public function getPromotionIds() : ?array
    {
        return $this->container['promotionIds'];
    }

    /**
     * Sets promotionIds.
     *
     * @param null|string[] $promotionIds a list of promotion identifiers provided by the seller when the promotions were created
     */
    public function setPromotionIds(?array $promotionIds) : self
    {
        $this->container['promotionIds'] = $promotionIds;

        return $this;
    }

    /**
     * Gets cODFee.
     */
    public function getCODFee() : ?Money
    {
        return $this->container['cODFee'];
    }

    /**
     * Sets cODFee.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\Money $cODFee cODFee
     */
    public function setCODFee(?Money $cODFee) : self
    {
        $this->container['cODFee'] = $cODFee;

        return $this;
    }

    /**
     * Gets cODFeeDiscount.
     */
    public function getCODFeeDiscount() : ?Money
    {
        return $this->container['cODFeeDiscount'];
    }

    /**
     * Sets cODFeeDiscount.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\Money $cODFeeDiscount cODFeeDiscount
     */
    public function setCODFeeDiscount(?Money $cODFeeDiscount) : self
    {
        $this->container['cODFeeDiscount'] = $cODFeeDiscount;

        return $this;
    }

    /**
     * Gets isGift.
     */
    public function getIsGift() : ?bool
    {
        return $this->container['isGift'];
    }

    /**
     * Sets isGift.
     *
     * @param null|bool $isGift when true, the item is a gift
     */
    public function setIsGift(?bool $isGift) : self
    {
        $this->container['isGift'] = $isGift;

        return $this;
    }

    /**
     * Gets conditionNote.
     */
    public function getConditionNote() : ?string
    {
        return $this->container['conditionNote'];
    }

    /**
     * Sets conditionNote.
     *
     * @param null|string $conditionNote the condition of the item as described by the seller
     */
    public function setConditionNote(?string $conditionNote) : self
    {
        $this->container['conditionNote'] = $conditionNote;

        return $this;
    }

    /**
     * Gets conditionId.
     */
    public function getConditionId() : ?string
    {
        return $this->container['conditionId'];
    }

    /**
     * Sets conditionId.
     *
     * @param null|string $conditionId The condition of the item.  Possible values: New, Used, Collectible, Refurbished, Preorder, Club.
     */
    public function setConditionId(?string $conditionId) : self
    {
        $this->container['conditionId'] = $conditionId;

        return $this;
    }

    /**
     * Gets conditionSubtypeId.
     */
    public function getConditionSubtypeId() : ?string
    {
        return $this->container['conditionSubtypeId'];
    }

    /**
     * Sets conditionSubtypeId.
     *
     * @param null|string $conditionSubtypeId The subcondition of the item.  Possible values: New, Mint, Very Good, Good, Acceptable, Poor, Club, OEM, Warranty, Refurbished Warranty, Refurbished, Open Box, Any, Other.
     */
    public function setConditionSubtypeId(?string $conditionSubtypeId) : self
    {
        $this->container['conditionSubtypeId'] = $conditionSubtypeId;

        return $this;
    }

    /**
     * Gets scheduledDeliveryStartDate.
     */
    public function getScheduledDeliveryStartDate() : ?string
    {
        return $this->container['scheduledDeliveryStartDate'];
    }

    /**
     * Sets scheduledDeliveryStartDate.
     *
     * @param null|string $scheduledDeliveryStartDate The start date of the scheduled delivery window in the time zone of the order destination. In ISO 8601 date time format.
     */
    public function setScheduledDeliveryStartDate(?string $scheduledDeliveryStartDate) : self
    {
        $this->container['scheduledDeliveryStartDate'] = $scheduledDeliveryStartDate;

        return $this;
    }

    /**
     * Gets scheduledDeliveryEndDate.
     */
    public function getScheduledDeliveryEndDate() : ?string
    {
        return $this->container['scheduledDeliveryEndDate'];
    }

    /**
     * Sets scheduledDeliveryEndDate.
     *
     * @param null|string $scheduledDeliveryEndDate The end date of the scheduled delivery window in the time zone of the order destination. In ISO 8601 date time format.
     */
    public function setScheduledDeliveryEndDate(?string $scheduledDeliveryEndDate) : self
    {
        $this->container['scheduledDeliveryEndDate'] = $scheduledDeliveryEndDate;

        return $this;
    }

    /**
     * Gets priceDesignation.
     */
    public function getPriceDesignation() : ?string
    {
        return $this->container['priceDesignation'];
    }

    /**
     * Sets priceDesignation.
     *
     * @param null|string $priceDesignation Indicates that the selling price is a special price that is available only for Amazon Business orders. For more information about the Amazon Business Seller Program, see the [Amazon Business website](https://www.amazon.com/b2b/info/amazon-business).   Possible values: BusinessPrice - A special price that is available only for Amazon Business orders.
     */
    public function setPriceDesignation(?string $priceDesignation) : self
    {
        $this->container['priceDesignation'] = $priceDesignation;

        return $this;
    }

    /**
     * Gets taxCollection.
     */
    public function getTaxCollection() : ?TaxCollection
    {
        return $this->container['taxCollection'];
    }

    /**
     * Sets taxCollection.
     *
     * @param null|\AmazonPHP\SellingPartner\Model\Orders\TaxCollection $taxCollection taxCollection
     */
    public function setTaxCollection(?TaxCollection $taxCollection) : self
    {
        $this->container['taxCollection'] = $taxCollection;

        return $this;
    }

    /**
     * Gets serialNumberRequired.
     */
    public function getSerialNumberRequired() : ?bool
    {
        return $this->container['serialNumberRequired'];
    }

    /**
     * Sets serialNumberRequired.
     *
     * @param null|bool $serialNumberRequired When true, the product type for this item has a serial number.  Returned only for Amazon Easy Ship orders.
     */
    public function setSerialNumberRequired(?bool $serialNumberRequired) : self
    {
        $this->container['serialNumberRequired'] = $serialNumberRequired;

        return $this;
    }

    /**
     * Gets isTransparency.
     */
    public function getIsTransparency() : ?bool
    {
        return $this->container['isTransparency'];
    }

    /**
     * Sets isTransparency.
     *
     * @param null|bool $isTransparency when true, transparency codes are required
     */
    public function setIsTransparency(?bool $isTransparency) : self
    {
        $this->container['isTransparency'] = $isTransparency;

        return $this;
    }

    /**
     * Gets iossNumber.
     */
    public function getIossNumber() : ?string
    {
        return $this->container['iossNumber'];
    }

    /**
     * Sets iossNumber.
     *
     * @param null|string $iossNumber The IOSS number of the seller. Sellers selling in the EU will be assigned a unique IOSS number that must be listed on all packages sent to the EU.
     */
    public function setIossNumber(?string $iossNumber) : self
    {
        $this->container['iossNumber'] = $iossNumber;

        return $this;
    }

    /**
     * Gets storeChainStoreId.
     */
    public function getStoreChainStoreId() : ?string
    {
        return $this->container['storeChainStoreId'];
    }

    /**
     * Sets storeChainStoreId.
     *
     * @param null|string $storeChainStoreId The store chain store identifier. Linked to a specific store in a store chain.
     */
    public function setStoreChainStoreId(?string $storeChainStoreId) : self
    {
        $this->container['storeChainStoreId'] = $storeChainStoreId;

        return $this;
    }

    /**
     * Gets deemedResellerCategory.
     */
    public function getDeemedResellerCategory() : ?string
    {
        return $this->container['deemedResellerCategory'];
    }

    /**
     * Sets deemedResellerCategory.
     *
     * @param null|string $deemedResellerCategory The category of deemed reseller. This applies to selling partners that are not based in the EU and is used to help them meet the VAT Deemed Reseller tax laws in the EU and UK.
     */
    public function setDeemedResellerCategory(?string $deemedResellerCategory) : self
    {
        $allowedValues = $this->getDeemedResellerCategoryAllowableValues();

        if (null !== $deemedResellerCategory && !\in_array($deemedResellerCategory, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                \sprintf(
                    "Invalid value '%s' for 'deemedResellerCategory', must be one of '%s'",
                    $deemedResellerCategory,
                    \implode("', '", $allowedValues)
                )
            );
        }
        $this->container['deemedResellerCategory'] = $deemedResellerCategory;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param int $offset Offset
     */
    public function offsetExists($offset) : bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param int $offset Offset
     *
     * @return null|mixed
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param null|int $offset Offset
     * @param mixed $value Value to be set
     */
    public function offsetSet($offset, $value) : void
    {
        if (null === $offset) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param int $offset Offset
     */
    public function offsetUnset($offset) : void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     *
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed returns data which can be serialized by json_encode(), which is a value
     *               of any type other than a resource
     */
    public function jsonSerialize() : string
    {
        return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets a header-safe presentation of the object.
     */
    public function toHeaderValue() : string
    {
        return \json_encode(ObjectSerializer::sanitizeForSerialization($this), JSON_THROW_ON_ERROR);
    }
}
